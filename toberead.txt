rubyforge.com.
simple_form---its css uses.
www.ruby-toolbox.com---onthis site see the html and markup ..part

http://guides.rubyonrails.org/debugging_rails_applications.html#debugging-with-ruby-debug

http://guides.rubyonrails.org/3_1_release_notes.html --for new changes that have been made in the rails 3
Specify force_ssl in a controller to force the browser to transfer data via HTTPS protocol on that particular controller. To limit to specific actions, :only or :except can be used.

pry railscasts

passenger

how are we storing performance of students..
how are we identifying students.

iteraters , hash , array , and string , blog ,proc ,  lamba

what is best practice to follow rails? 

Is it Good to follow test driven development?

what are the good gems , that are necessary(that can enhance development time) , normally?

mongrel db? as server ..should we prefer it...                 

can any other application use our database(model) , if we put this on server 

what depths of ruby you think is good to have intially...or is it good to learn as you go?

Any suggestion that you can give we before going to production? 




$('#btnadd').click(function() {
        var num     = $('.clonedInput').length; // how many "duplicatable" input fields we currently have
        var newNum  = new Number(num + 1);      // the numeric ID of the new input field being added

        // create the new element via clone(), and manipulate it's ID using newNum value
        var newElem = $('#input' + num).clone().attr('id', 'input' + newNum);

        // manipulate the name/id values of the input inside the new element
        newElem.children(':first').attr('id', 'name' + newNum).attr('name', 'name' + newNum);

        // insert the new element after the last "duplicatable" input field
        $('#input' + num).after(newElem);

        // enable the "remove" button
        $('#btnDel').attr('disabled','');

        // business rule: you can only add 5 names
        if (newNum == 5)
            $('#btnAdd').attr('disabled','disabled');
    });
$('#btnDel').click(function() {
        var num = $('.clonedInput').length; // how many "duplicatable" input fields we currently have
        $('#input' + num).remove();     // remove the last element

                // enable the "add" button
		$('#btnAdd').attr('disabled','');

                // if only one element remains, disable the "remove" button
         if (num-1 == 1)
           $('#btnDel').attr('disabled','disabled');
   });  //delete button code deleted


